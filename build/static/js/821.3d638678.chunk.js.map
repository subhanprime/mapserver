{"version":3,"file":"static/js/821.3d638678.chunk.js","mappings":"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","sources":["Component/CustomButton/CustomBTN.jsx","Component/MarketplaceCard/Likeviewstyle.js","Component/MarketplaceCard/LikeView.jsx","Component/MarketplaceCard/MarketplaceCard.jsx","Component/Paginations/Paginations.jsx","Component/AdminDashbord/EmptyData.jsx","Component/userDashbord/profile/allproducts.jsx","hooks/makeToast.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nfunction CustomBTN(props) {\r\n  return (\r\n    <Button\r\n      sx={{\r\n        py: 1,\r\n        fontSize: { xs: \"12px\", md: \"15px\" },\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n        borderRadius: \"10px\",\r\n        background:\r\n            \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n        color: \"white\",\r\n        fontWeight: 700,\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default CustomBTN;\r\n","export const iconStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  width: \"25%\",\r\n  color: \"lightgray\",\r\n};\r\n","import React from \"react\";\r\nimport { iconStyle } from \"../MarketplaceCard/Likeviewstyle\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nfunction LikeView({ userlikeviews, howManyViews }) {\r\n  let like = userlikeviews?.likesList?.length;\r\n  let view = userlikeviews?.favoritesList?.length;\r\n  let views = howManyViews?.length;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        my: 1,\r\n      }}\r\n    >\r\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Stack spacing={1} direction=\"row\">\r\n          <Box style={iconStyle}>\r\n            <ThumbUpIcon fontSize=\"small\" />\r\n            <Typography fontSize=\"small\" sx={{ ml: 0.5 }}>\r\n              {like > 0 ? like : 0}\r\n            </Typography>\r\n          </Box>\r\n          <Box style={iconStyle}>\r\n            <FavoriteIcon fontSize=\"small\" sx={{ ml: 1 }} />\r\n            <Typography fontSize=\"small\" sx={{ ml: 0.5 }}>\r\n              {\" \"}\r\n              {view ? view : 0}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box style={iconStyle}>\r\n            <VisibilityIcon fontSize=\"small\" sx={{ ml: 1 }} />\r\n            <Typography fontSize=\"small\" sx={{ ml: 0.5 }}>\r\n              {views ? views : 0}\r\n            </Typography>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LikeView;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\r\nimport HighlightAltIcon from \"@mui/icons-material/HighlightAlt\";\r\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { URL } from \"../../URL\";\r\nimport CustomBTN from \"../CustomButton/CustomBTN\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport LikeView from \"./LikeView\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../Loading/Loading\";\r\nimport { AddCeil, AddfailNfts } from \"../../Redux/Reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport bloctech from \"../../images/bloctech.jpg\";\r\nimport useMakeToast from \"../../hooks/makeToast\";\r\nfunction MarketplaceCard(props) {\r\n  const makeToast = useMakeToast();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const handleOpen = (_id) => {\r\n    setOpen(true);\r\n  };\r\n  const { ceilSlice } = useSelector((state) => state);\r\n  const { userdetails } = ceilSlice;\r\n  const filterRole =\r\n    userdetails.role && userdetails?.role.filter((role) => role !== null);\r\n  const videoType = [\"mov\", \"mp4\", \"avi\", \"wmf\", \"flv\", \"webm\"];\r\n  const {\r\n    address,\r\n    locations,\r\n    id,\r\n    name,\r\n    filelink,\r\n    Image,\r\n    file,\r\n    user,\r\n    productTotalPrice,\r\n    userlikeviews,\r\n    howManyViews,\r\n    paidStatusContract,\r\n    failedNftmint,\r\n  } = props;\r\n  const result = file?.split(\".\");\r\n  let fileType = result?.pop();\r\n  const mintFaildNFT = async (_id, address) => {\r\n    try {\r\n      setLoading(true);\r\n      let mintNft = { _id, address };\r\n      const { data } = await axios.post(`${URL}/mintfailedNft`, mintNft);\r\n      if (data?.data === true) {\r\n        dispatch(AddCeil(data?.nftes?.nfts));\r\n        dispatch(AddfailNfts(data?.nftes?.failedNfts));\r\n        makeToast(`${data?.message}`, \"success\", 3, \"Success\");\r\n        failedNftmint(true);\r\n      }\r\n      data?.data === false &&\r\n        makeToast(`${data?.message}`, \"error\", 3, \"Failed\");\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Nft mint failed error \");\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {loading && <Loading loading={Loading} />}\r\n      <Card\r\n        sx={{\r\n          backgroundColor: \"background.secondary\",\r\n          minHeight: \"440px\",\r\n          maxHeight: \"475px\",\r\n          borderRadius: \"15px\",\r\n        }}\r\n      >\r\n        <Box sx={{ position: \"relative\", minHeight: \"250px\" }}>\r\n          {/* <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: \"10px\",\r\n              left: \"13px\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                fontSize: \"20px\",\r\n                backgroundColor: \"#3ACAB8\",\r\n                opacity: \"\",\r\n                paddingX: \"8px\",\r\n                paddingY: \"5px\",\r\n                borderRadius: \"10px\",\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              nft\r\n            </Typography>\r\n          </Box> */}\r\n          {/* <Box\r\n            sx={{ position: \"absolute\", top: \"10px\", zIndex: 1, right: \"10px\" }}\r\n          >\r\n            <HighlightAltIcon\r\n              sx={{\r\n                fontSize: \"35px\",\r\n                color: \"white\",\r\n                backgroundColor: \"#3ACAB8\",\r\n                opacity: \"\",\r\n                padding: \"8px\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            />\r\n          </Box> */}\r\n          {/* <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              bottom: \"10px\",\r\n              zIndex: 1,\r\n              left: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <Link\r\n              to={`/Bmap/${locations?.lang}/${locations?.long}`}\r\n              style={{ color: \"white\" }}\r\n            >\r\n              <MyLocationIcon\r\n                sx={{\r\n                  fontSize: \"35px\",\r\n                  backgroundColor: \"#3ACAB8\",\r\n                  opacity: \"\",\r\n                  padding: \"8px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              />\r\n            </Link>\r\n          </Box> */}\r\n          {/* <Box\r\n            sx={{ position: \"absolute\", bottom: \"10px\", zIndex: 1, right: 0 }}\r\n          >\r\n            <IconButton\r\n              color=\"white\"\r\n              onClick={() => {\r\n                handleOpen(id);\r\n              }}\r\n            >\r\n              <IosShareIcon\r\n                sx={{\r\n                  fontSize: \"35px\",\r\n                  color: \"white\",\r\n                  backgroundColor: \"#3ACAB8\",\r\n                  opacity: \"\",\r\n                  padding: \"8px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Box> */}\r\n          {!videoType?.includes(fileType) ? (\r\n            <Box\r\n              sx={(theme) => ({\r\n                boxShadow:\r\n                  theme.palette.mode === \"light\"\r\n                    ? \"rgb(242,231,231) 10px 10px 20px 22px inset, rgb(242,231,231) 10px 18px 36px 28px inset\"\r\n                    : \"rgb(21 0 47 / 60%) 10px 10px 20px 22px inset, rgb(21 0 47 / 60%) 10px 18px 36px 28px inset\",\r\n                backgroundImage:\r\n                  file || filelink\r\n                    ? `url(${URL}/upload/${file})` || `url(${filelink})`\r\n                    : Image\r\n                    ? `url(${URL}/upload/${Image})`\r\n                    : `url(${bloctech})`,\r\n\r\n                backgroundPosition: \"center\",\r\n                backgroundSize: \"cover\",\r\n                height: \"250px\",\r\n                width: \"100%\",\r\n              })}\r\n            ></Box>\r\n          ) : (\r\n            <>\r\n              {videoType?.includes(fileType) ? (\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: \"10px 10px 0px 0px\",\r\n                    overflow: \"hidden\",\r\n                    width: \"100%\",\r\n                    height: \"250px\",\r\n                  }}\r\n                >\r\n                  <video\r\n                    src={`${URL}/upload/${file}`}\r\n                    width=\"100%\"\r\n                    margin=\"0px\"\r\n                    controls\r\n                    autoPlay={false}\r\n                    style={{ minHeight: \"260px\" }}\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </Box>\r\n        <CardContent sx={{ m: { xs: 0 } }}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              gutterBottom\r\n              sx={{\r\n                pb: 1,\r\n                maxWidth: \"250px\",\r\n                overfolow: \"hidden\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              component=\"h2\"\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <LikeView\r\n              userlikeviews={userlikeviews}\r\n              howManyViews={howManyViews}\r\n            />\r\n            {/* {paidStatusContract === false && filterRole?.includes(\"admin\") ? (\r\n              <Button\r\n                onClick={() => {\r\n                  mintFaildNFT(id, address);\r\n                }}\r\n                sx={{\r\n                  fontSize: \"12px\",\r\n                  borderRadius: \"10px\",\r\n                  pb: 1,\r\n                  background:\r\n                    \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                Mint again\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography sx={{ fontSize: \"15px\" }}> Price</Typography>\r\n            <Typography\r\n              sx={{\r\n                fontSize: \"15px\",\r\n                backgroundColor: \"background.buttonBg\",\r\n                px: 1,\r\n                py: \"5px\",\r\n                borderRadius: \"7px\",\r\n              }}\r\n            >\r\n              {productTotalPrice ? +\"\" + productTotalPrice + \" ETH\" : \"0\"}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* <LikeView userlikeviews={userlikeviews} howManyViews={howManyViews} /> */}\r\n          {/* <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{ fontSize: \"1rem\", color: \"gray\", fontWeight: 700 }}\r\n            >\r\n              user\r\n            </Typography>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                color: \"gray\",\r\n              }}\r\n            >\r\n              <Typography\r\n                component=\"p\"\r\n                sx={{\r\n                  fontSize: \"10px\",\r\n                  mr: 1,\r\n                  maxWidth: \"120px\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                {user?.username ? user?.username : \"User name\"}\r\n              </Typography>\r\n              {user?.profileImage ? (\r\n                <Box>\r\n                  <img\r\n                    src={`${URL}/upload/${user?.profileImage}`}\r\n                    alt=\"\"\r\n                    style={{\r\n                      width: \"35px\",\r\n                      height: \"35px\",\r\n                      borderRadius: \"50%\",\r\n                    }}\r\n                  />\r\n                </Box>\r\n              ) : (\r\n                <Box>\r\n                  <AccountCircleIcon\r\n                    style={{\r\n                      width: \"35px\",\r\n                      height: \"35px\",\r\n                      borderRadius: \"50%\",\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box> */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"centers\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"p\"\r\n              sx={{ fontSize: \"1rem\", color: \"gray\", fontWeight: 700 }}\r\n            >\r\n              status\r\n            </Typography>\r\n            <Box>\r\n              <Typography\r\n                color={paidStatusContract ? \"green\" : \"red\"}\r\n                component=\"p\"\r\n                sx={{\r\n                  fontSize: \"12px\",\r\n                  ml: 1,\r\n                  mt: 1,\r\n                  fontWeight: 700,\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {paidStatusContract ? \"Mint succes\" : \"pending\"}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Link to={`/nftDetail/${id}`} style={{ textDecoration: \"none\" }}>\r\n            <Box sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\r\n              <Button\r\n                sx={{\r\n                  clipPath:\r\n                    \"polygon(5% 0, 100% 0, 100% 90%, 95% 100%, 0 100%, 0 15%)\",\r\n                  background:\r\n                    \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n                  fontFamily: \"'Poppins'\",\r\n                  fontWeight: 700,\r\n                  fontSize: \"12px\",\r\n                  py: 2,\r\n                  px: 3,\r\n                  mt: 2,\r\n                  color: \"black\",\r\n                  width: \"70%\",\r\n\r\n                  mx: \"auto\",\r\n                }}\r\n              >\r\n                View Details\r\n              </Button>\r\n            </Box>\r\n            {/* <CustomBTN text=\"view Detail\" /> */}\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default MarketplaceCard;\r\n","import React from \"react\";\r\nimport { Stack } from \"@mui/system\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction Paginations({\r\n  PreviousButton,\r\n  paginationsHandles,\r\n  NextButton,\r\n  menuItems,\r\n  page,\r\n  totalPages,\r\n}) {\r\n  const styledactivelink = ({ isActive }) => {\r\n    return {\r\n      textDecoration: isActive ? \"underline\" : \"none\",\r\n    };\r\n  };\r\n  return (\r\n    <Box sx={{ m: 1, mb: 2 }}>\r\n      <Stack direction={\"row\"} alignItems=\"right\" justifyContent=\"center\">\r\n        {page === 1 ? (\r\n          <Button\r\n            startIcon={<ChevronLeftIcon />}\r\n            sx={{\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n            disabled\r\n          />\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              PreviousButton();\r\n            }}\r\n            startIcon={<ChevronLeftIcon />}\r\n            sx={{\r\n              cursor: \"pointer\",\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {menuItems?.length > 0 &&\r\n          menuItems.map((items, index) => {\r\n            return (\r\n              <>\r\n                {index < 5 ? (\r\n                  <Button\r\n                    sx={{ cursor: \"pointer\" }}\r\n                    component={NavLink}\r\n                    to=\"#\"\r\n                    // style={styledactivelink}\r\n                    key={index + 1}\r\n                    onClick={() => {\r\n                      paginationsHandles(index + 1);\r\n                    }}\r\n                  >\r\n                    {index + 1}\r\n                  </Button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n            );\r\n          })}\r\n        {page !== totalPages ? (\r\n          <Button\r\n            // component={<NavLink />}\r\n            to=\"#\"\r\n            onClick={() => {\r\n              NextButton();\r\n            }}\r\n            startIcon={<NavigateNextIcon />}\r\n            sx={{\r\n              cursor: \"pointer\",\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Button\r\n            startIcon={<NavigateNextIcon />}\r\n            sx={{\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n            disabled\r\n          />\r\n        )}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Paginations;\r\n","import { Box, Paper, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport const EmptyData = ({ text }) => {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={(theme) => ({\r\n          mx: \"auto\",\r\n          mt: 5,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          width: \"100%\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\" ? \"#F4F4F4\" : \"#3A3A3A\",\r\n          height: \"300px\",\r\n          borderRadius: \"10px\",\r\n      \r\n        })}\r\n      >\r\n        <Typography\r\n          textAlign=\"center\"\r\n          sx={{ fontSize: { xs: \"20px\", md: \"40px \", fontWeight: \"bold\" } }}\r\n        >\r\n          {text}\r\n        </Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MarketplaceCard from \"../../MarketplaceCard/MarketplaceCard\";\r\nimport { EmptyData } from \"../../AdminDashbord/EmptyData\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getUserFollowsNfts, getuserNfts } from \"../../../Api/api\";\r\nimport Loading from \"../../../Loading/Loading\";\r\nimport Paginations from \"../../Paginations/Paginations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AdduserNfts } from \"../../../Redux/Reducer\";\r\nexport default function AllProducts({\r\n  Nfts,\r\n  AllNfts,\r\n  faildNFT,\r\n  favourite,\r\n  follow,\r\n}) {\r\n  let dispatch = useDispatch();\r\n  const [totalPage, setTotalPage] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState();\r\n  const [page, setPage] = React.useState(1);\r\n  const [Nftsrecord, setRecord] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { ceilSlice } = useSelector((state) => state);\r\n  const { userNfts, ceildetails, failsNfts, userdetails } = ceilSlice;\r\n  const [nftmint, setNftmint] = useState(false);\r\n  let lenOFceil = 0;\r\n  const checker = true;\r\n  const fetchFollowANDFavouriteNfts = async (community) => {\r\n    setLoading(true);\r\n    let data = await getUserFollowsNfts(community);\r\n    setLoading(false);\r\n    setRecord(data);\r\n  };\r\n  const fetchUserNfts = async (address) => {\r\n    setLoading(true);\r\n    let data = await getuserNfts(address, page);\r\n    data.status === \"ok\" && setRecord(data?.data);\r\n    data?.status === \"ok\" && dispatch(AdduserNfts(data));\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (Nfts === true || Nfts === false) {\r\n        if (Nfts) {\r\n          setRecord(ceildetails);\r\n        }\r\n      }\r\n      if (AllNfts) {\r\n        setCurrentPage(userNfts?.currentPage);\r\n        setTotalPage(userNfts?.totalPages);\r\n        fetchUserNfts(userdetails?.walletAddress);\r\n      }\r\n      if (follow) {\r\n        if (userdetails?.follows?.length > 0) {\r\n          fetchFollowANDFavouriteNfts(userdetails?.follows, page);\r\n        }\r\n      }\r\n      if (favourite) {\r\n        if (userdetails?.favoritesList?.length > 0) {\r\n          fetchFollowANDFavouriteNfts(userdetails?.favoritesList, page);\r\n        }\r\n      }\r\n      if (faildNFT === true) {\r\n        setRecord(failsNfts);\r\n      }\r\n    })();\r\n  }, [nftmint, page]);\r\n  //...Pagniations here.........\r\n  let menuItems = [];\r\n  for (var i = 1; i <= totalPage; i++) {\r\n    menuItems.push(i);\r\n  }\r\n  const paginationsHandles = (pages) => {\r\n    favourite && fetchFollowANDFavouriteNfts(userdetails?.favoritesList);\r\n    follow && fetchFollowANDFavouriteNfts(userdetails?.follows);\r\n    // Nfts && fetchUserNfts(userdetails?.walletAddress);\r\n    setPage(pages);\r\n  };\r\n  const PreviousButton = () => {\r\n    setPage((page) => page - 1);\r\n  };\r\n  const NextButton = () => {\r\n    setPage((page) => page + 1);\r\n  };\r\n  return (\r\n    <>\r\n      <Loading loading={loading} />\r\n      <Box sx={{ width: \"100%\", mx: \"auto\" }}>\r\n        <Grid container my={2}>\r\n          {Nftsrecord?.length > lenOFceil ? (\r\n            Nftsrecord?.map(\r\n              (\r\n                {\r\n                  address,\r\n                  _id,\r\n                  name,\r\n                  lang,\r\n                  long,\r\n                  filelink,\r\n                  capturesImage,\r\n                  file,\r\n                  productTotalPrice,\r\n                  user,\r\n                  favoritesList,\r\n                  likesList,\r\n                  howManyViews,\r\n                  paidStatusContract,\r\n                },\r\n                index\r\n              ) => (\r\n                <Grid item xs={12} sm={6} lg={4} p={2} key={index + _id}>\r\n                  <MarketplaceCard\r\n                    address={address}\r\n                    locations={{ lang, long }}\r\n                    id={_id}\r\n                    name={name}\r\n                    Image={capturesImage}\r\n                    user={user}\r\n                    filelink={filelink}\r\n                    file={file}\r\n                    productTotalPrice={productTotalPrice}\r\n                    checker={checker}\r\n                    userlikeviews={{ likesList, favoritesList }}\r\n                    howManyViews={howManyViews}\r\n                    paidStatusContract={paidStatusContract}\r\n                    failedNftmint={setNftmint}\r\n                  />\r\n                </Grid>\r\n              )\r\n            )\r\n          ) : (\r\n            <EmptyData text=\" Empty  NFTs ....\" />\r\n          )}\r\n        </Grid>\r\n\r\n        {AllNfts && (\r\n          <Paginations\r\n            PreviousButton={PreviousButton}\r\n            paginationsHandles={paginationsHandles}\r\n            NextButton={NextButton}\r\n            menuItems={menuItems}\r\n            page={page}\r\n            totalPages={totalPage}\r\n          />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport cogoToast from 'cogo-toast';\r\nconst useMakeToast = () => {\r\n    const makeToast = (content, type = '', hideAfter = 1, heading = '') => {\r\n        const options = {\r\n            position: 'top-right',\r\n            heading,\r\n            hideAfter,\r\n            bar: { size: '5px' }\r\n        }\r\n        if (type == 'success')\r\n            cogoToast.success(content, options);\r\n        else if (type == 'error')\r\n            cogoToast.error(content, options);\r\n        else if (type == 'warn') {\r\n            cogoToast.warn(content, options);\r\n        } else if (type == 'info') {\r\n            cogoToast.info(content, options);\r\n        } else {\r\n            cogoToast.info(content, options);\r\n        }\r\n\r\n    }\r\n\r\n    return makeToast;\r\n}\r\n\r\n\r\nexport default useMakeToast;"],"names":["props","sx","py","fontSize","xs","md","width","marginTop","borderRadius","background","color","fontWeight","text","iconStyle","display","justifyContent","alignItems","userlikeviews","howManyViews","like","likesList","length","view","favoritesList","views","Box","my","Stack","spacing","direction","style","ThumbUp","Typography","ml","Favorite","Visibility","useMakeToast","useDispatch","useState","loading","userdetails","useSelector","state","ceilSlice","videoType","role","filter","id","address","locations","name","filelink","Image","file","productTotalPrice","user","paidStatusContract","result","failedNftmint","split","fileType","pop","Loading","backgroundColor","minHeight","maxHeight","position","includes","overflow","height","src","URL","margin","controls","autoPlay","theme","boxShadow","palette","mode","backgroundImage","bloctech","backgroundPosition","backgroundSize","m","gutterBottom","pb","maxWidth","overfolow","component","px","mt","textAlign","to","textDecoration","clipPath","fontFamily","mx","PreviousButton","paginationsHandles","NextButton","menuItems","page","totalPages","mb","startIcon","disabled","onClick","cursor","map","items","index","NavLink","EmptyData","AllProducts","Nfts","AllNfts","faildNFT","favourite","follow","dispatch","totalPage","setTotalPage","setCurrentPage","React","setPage","Nftsrecord","setRecord","setLoading","userNfts","ceildetails","failsNfts","nftmint","setNftmint","fetchFollowANDFavouriteNfts","community","getUserFollowsNfts","data","fetchUserNfts","getuserNfts","status","AdduserNfts","useEffect","currentPage","walletAddress","follows","i","push","Grid","container","_id","lang","long","capturesImage","item","sm","lg","p","MarketplaceCard","checker","Paginations","pages","content","type","options","heading","hideAfter","bar","size","cogoToast"],"sourceRoot":""}